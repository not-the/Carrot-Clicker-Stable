/* Carrot Utilities - Created by JJCVIP and not-the */
function dom(id) { return document.getElementById(id); }function $(sel) { return document.querySelector(sel); }function eInnerText(element, text) { if(element.innerText != text) element.innerText = text; }function eInnerHTML(element, html) { if(element.innerHTML != html) element.innerHTML = html; }function store(key, value) { if(value) localStorage.setItem(key, value); else return localStorage.getItem(key); }function sessionStorage(key, value) { if(value) sessionStorage.setItem(key, value); else return sessionStorage.getItem(key); }function storeNum(key, value) { if(value) localStorage.setItem(key, JSON.stringify(value)); else { let v=localStorage.getItem(key); return v && Number(v); } }Storage.prototype.setObject = function (key, value) {this.setItem(key, JSON.stringify(value));};Storage.prototype.getObject = function (key) {var value = this.getItem(key);return value && JSON.parse(value);};const bases = [1000, 1000000, 1000000000, 1000000000000, 1000000000000000, 1000000000000000000, 1e+21, 1e+24, 1e+27, 1e+30, 1.0000000000000001e+33, 1e+36, 1.0000000000000001e+39, 1e+42, 1.0000000000000001e+45, 1e+48, 1e+51, 1e+54, 1e+57, 1.0000000000000001e+60, 1e+63, 1.0000000000000001e+66];const unitsShort = ["k", "m", "b", "t", "q", "Q", "s", "S", "o", "n", "d", "u", "D", "T", "qu", "Qu", "se", "Se", "O", "N", "V"];const unitsLong = [" thousand", " million", " billion", " trillion", " quadrillion", " quintillion", " sextillion", " septillion", " octillion", " nonillion", " decillion", " undecillion", " duodecillion", " tredecillion", " quattuordecillion", " quindecillion", " sexdecillion", " septendecillion", " octodecillion", " novemdecillion", " vigintillion"];function DisplayRounded(value, Fixedto=3, min=0, units=unitsShort, ignore_full_nums=false) {if(typeof value != 'number') value = Number(value);let fixed = value % 1 == 0 ? 0 : Fixedto;if(value < min || (settings.full_numbers && !ignore_full_nums)) return numCommas(value.toFixed(fixed));for(i = 0; i < units.length; i++) {fixed = value / bases[i] % 1 == 0 ? 0 : Fixedto;if(value < bases[i + 1] && value > bases[0]) return (value / bases[i]).toFixed(fixed) + units[i];}return value;}function numCommas(num) {if(!num && num!=0) return console.error(TypeError);var parts = num.toString().split(".");parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");return parts.join(".");};function percentage(num, total) { return (100 * num) / total;};function ClearLocalStorage(disableReload) {console.log('Clearing local storage');window.scrollTo(0, 0);localStorage.clear();if (disableReload) return;location.reload();};function capitalizeFL(string) { return string.charAt(0).toUpperCase() + string.slice(1); };var volume = 0.8;var music;function playSound(file, path = './assets/sounds/') {if(!settings.enableSounds) return;var audio = new Audio(path + file);audio.play();};function playMusic(file='music.m4a', path='./assets/music/', loop=false) {if(settings.enableSounds == false || settings.enableMusic == false) return;music = new Audio(path + file);music.volume = volume;music.loop = loop;console.log('playMusic() - Playing track 1...');music.play();};function stopMusic() {if(!music) return console.log('stopMusic(): No music is playing');music.pause();music.currentTime = 0;};
